(defun listPrint(name) (message "%s" name))
(message "'ls' is string? %s" (stringp "ls"))
(message "2 is string? %s" (stringp 2))
(message "nil is string? %s" (stringp nil))
(message "t is string? %s" (stringp t))
(message (make-string 40 ?x))
(message (string ?A ?B ?C))
(message (substring "abcdefgh" 0 3))
(message (substring "abcdefgh" 3 5))
(message (substring "abcdefg" -3 -1))
(message (substring "abcdefg" -3 nil))
(message (concat "First" " " "Fruit"))
(mapcar 'listPrint (split-string " three words together"))
(message "x = x ? %s" (char-equal ?x ?x))
(message "abc = abc ? %s" (string= "abc" "abc"))
(message "abc < abd ? %s" (string< "abc" "abd"))
(message "abc > abc ? %s" (string> "abc" "abd"))
(message "abc vs abd ? %s" (compare-strings "abc" 0 nil "abd" 0 nil))
(message (number-to-string 12))
(message (format "Here you go %s" "John"))
(message (downcase "ABCD"))
(message (upcase "abcd"))
(message (capitalize "this is a simple sentence"))
